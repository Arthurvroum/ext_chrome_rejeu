{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VThemeProvider.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeTagProps } from \"../../composables/tag.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\"; // Utilities\nimport { genericComponent, propsFactory } from \"../../util/index.js\";\nexport const makeVThemeProviderProps = propsFactory({\n  withBackground: Boolean,\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n  ...makeTagProps()\n}, 'VThemeProvider');\nexport const VThemeProvider = genericComponent()({\n  name: 'VThemeProvider',\n  props: makeVThemeProviderProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    return () => {\n      if (!props.withBackground) return slots.default?.();\n      return _createVNode(props.tag, {\n        \"class\": ['v-theme-provider', themeClasses.value, props.class],\n        \"style\": props.style\n      }, {\n        default: () => [slots.default?.()]\n      });\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}