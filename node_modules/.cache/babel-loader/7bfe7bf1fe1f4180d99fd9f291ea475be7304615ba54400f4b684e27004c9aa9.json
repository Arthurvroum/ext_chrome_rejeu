{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\nimport { useLocale } from \"../../composables/locale.js\"; // Utilities\nimport { callEvent } from \"../../util/index.js\"; // Types\nexport function useInputIcon(props) {\n  const {\n    t\n  } = useLocale();\n  function InputIcon(_ref) {\n    let {\n      name,\n      color\n    } = _ref;\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear'\n    }[name];\n    const listener = props[`onClick:${name}`];\n    function onKeydown(e) {\n      if (e.key !== 'Enter' && e.key !== ' ') return;\n      e.preventDefault();\n      e.stopPropagation();\n      callEvent(listener, new PointerEvent('click', e));\n    }\n    const label = listener && localeKey ? t(`$vuetify.input.${localeKey}`, props.label ?? '') : undefined;\n    return _createVNode(VIcon, {\n      \"icon\": props[`${name}Icon`],\n      \"aria-label\": label,\n      \"onClick\": listener,\n      \"onKeydown\": onKeydown,\n      \"color\": color\n    }, null);\n  }\n  return {\n    InputIcon\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}