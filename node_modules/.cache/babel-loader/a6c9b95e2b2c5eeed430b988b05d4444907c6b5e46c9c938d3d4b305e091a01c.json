{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"replay-tab\"\n};\nconst _hoisted_2 = {\n  class: \"ultra-compact-header\"\n};\nconst _hoisted_3 = {\n  class: \"steps-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_replay_header = _resolveComponent(\"replay-header\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_subtitle = _resolveComponent(\"v-card-subtitle\");\n  const _component_execution_options = _resolveComponent(\"execution-options\");\n  const _component_steps_list = _resolveComponent(\"steps-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_fade_transition = _resolveComponent(\"v-fade-transition\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_container, {\n    fluid: \"\",\n    class: \"replay-tab-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_replay_header, {\n      \"execution-status\": $data.executionStatus,\n      \"auto-loaded-data\": $data.autoLoadedData,\n      onLoadFile: $options.loadScenarioFile,\n      onClearData: $options.clearAllReplayData\n    }, null, 8, [\"execution-status\", \"auto-loaded-data\", \"onLoadFile\", \"onClearData\"]), _createVNode(_component_v_fade_transition, null, {\n      default: _withCtx(() => [$data.scenario || $data.recordedRequestsData ? (_openBlock(), _createBlock(_component_v_card, {\n        key: 0,\n        flat: \"\",\n        class: \"mt-1 scenario-card\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_card_title, {\n          class: \"text-body-1 py-1 px-3 font-weight-bold\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.scenario?.info?.title || 'Recently Recorded Scenario') + \" \", 1), _createVNode(_component_v_chip, {\n            color: \"primary\",\n            variant: \"flat\",\n            size: \"x-small\",\n            class: \"ml-2\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($data.scenarioSteps.length) + \" steps \", 1)]),\n            _: 1\n          })]),\n          _: 1\n        }), $data.scenario?.info?.description || !$data.scenario ? (_openBlock(), _createBlock(_component_v_card_subtitle, {\n          key: 0,\n          class: \"text-caption pt-0 pb-1 px-3\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.scenario?.info?.description || 'This is your recently recorded scenario ready for replay.'), 1)]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)]), _createVNode(_component_execution_options, {\n          \"stop-on-error\": $data.executionOptions.stopOnError,\n          \"onUpdate:stopOnError\": _cache[0] || (_cache[0] = $event => $data.executionOptions.stopOnError = $event),\n          \"step-interval\": $data.executionOptions.stepInterval,\n          \"onUpdate:stepInterval\": _cache[1] || (_cache[1] = $event => $data.executionOptions.stepInterval = $event),\n          \"error-on-capture\": $data.executionOptions.errorOnCapture,\n          \"onUpdate:errorOnCapture\": _cache[2] || (_cache[2] = $event => $data.executionOptions.errorOnCapture = $event),\n          \"show-runtime-progress\": $data.executionOptions.showRuntimeProgress,\n          \"onUpdate:showRuntimeProgress\": _cache[3] || (_cache[3] = $event => $data.executionOptions.showRuntimeProgress = $event),\n          \"is-replaying\": $data.isReplaying,\n          onStartReplay: $options.startReplay,\n          onClearResults: $options.clearResults,\n          class: \"mt-1\"\n        }, null, 8, [\"stop-on-error\", \"step-interval\", \"error-on-capture\", \"show-runtime-progress\", \"is-replaying\", \"onStartReplay\", \"onClearResults\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_steps_list, {\n          steps: $data.scenarioSteps,\n          \"expanded-step\": $data.expandedStep,\n          \"is-replaying\": $data.isReplaying,\n          results: $data.replayResults,\n          \"current-step-index\": $data.currentStepIndex,\n          \"show-runtime-progress\": $data.executionOptions.showRuntimeProgress,\n          onToggleStep: $options.toggleStepDetails,\n          onToggleAllSteps: $options.toggleAllSteps,\n          onUpdateStep: $options.updateStep,\n          onExportResults: $options.exportReplayResults,\n          onGeneratePdf: $options.generatePdfReport\n        }, null, 8, [\"steps\", \"expanded-step\", \"is-replaying\", \"results\", \"current-step-index\", \"show-runtime-progress\", \"onToggleStep\", \"onToggleAllSteps\", \"onUpdateStep\", \"onExportResults\", \"onGeneratePdf\"])])]),\n        _: 1\n      })) : _createCommentVNode(\"\", true)]),\n      _: 1\n    }), !$data.scenario && !$data.recordedRequestsData ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0,\n      class: \"mt-4 pa-8 d-flex align-center justify-center flex-column\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        icon: \"mdi-file-document-outline\",\n        size: \"64\",\n        color: \"grey-lighten-1\",\n        class: \"mb-4\"\n      }), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n        class: \"text-h6 mb-2\"\n      }, \"No scenario loaded\", -1)), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n        class: \"text-body-2 text-grey mb-6\"\n      }, \"Please load an OpenAPI 3.0 file to get started or record a new session.\", -1)), _createVNode(_component_v_btn, {\n        color: \"primary\",\n        \"prepend-icon\": \"mdi-upload\",\n        onClick: _cache[4] || (_cache[4] = $event => _ctx.$refs.fileInput.click())\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" Load Scenario File \")])),\n        _: 1\n      }), _createElementVNode(\"input\", {\n        ref: \"fileInput\",\n        type: \"file\",\n        style: {\n          \"display\": \"none\"\n        },\n        onChange: _cache[5] || (_cache[5] = (...args) => $options.loadScenarioFile && $options.loadScenarioFile(...args)),\n        accept: \".json\"\n      }, null, 544)]),\n      _: 1\n    })) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}