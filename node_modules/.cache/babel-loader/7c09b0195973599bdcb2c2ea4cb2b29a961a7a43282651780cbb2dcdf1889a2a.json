{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"variable-capture\"\n};\nconst _hoisted_2 = {\n  class: \"capture-form\"\n};\nconst _hoisted_3 = {\n  class: \"form-row\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-row\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-row\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  key: 0,\n  class: \"existing-captures\"\n};\nconst _hoisted_14 = {\n  class: \"capture-info\"\n};\nconst _hoisted_15 = {\n  class: \"capture-source\"\n};\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h4\", null, \"Variable Capture\", -1)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Variable Name:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.captureName = $event),\n    placeholder: \"e.g. authToken\"\n  }, null, 512), [[_vModelText, $data.captureName]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Regex Pattern:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.captureRegex = $event),\n    placeholder: \"e.g. token:([A-Za-z0-9]+)\"\n  }, null, 512), [[_vModelText, $data.captureRegex]])])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Source:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.captureSource = $event)\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"option\", {\n    value: \"responseBody\"\n  }, \"Response Body\", -1), _createElementVNode(\"option\", {\n    value: \"responseHeaders\"\n  }, \"Response Headers\", -1), _createElementVNode(\"option\", {\n    value: \"url\"\n  }, \"URL\", -1)]), 512), [[_vModelSelect, $data.captureSource]])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.captureRequired = $event)\n  }, null, 512), [[_vModelCheckbox, $data.captureRequired]]), _cache[11] || (_cache[11] = _createTextVNode(\" Required \"))])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.captureFailOnError = $event)\n  }, null, 512), [[_vModelCheckbox, $data.captureFailOnError]]), _cache[12] || (_cache[12] = _createTextVNode(\" Fail on Error \"))])]), _createElementVNode(\"div\", _hoisted_11, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", null, \"Scope:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.captureScope = $event)\n  }, _cache[13] || (_cache[13] = [_createElementVNode(\"option\", {\n    value: \"global\"\n  }, \"Global\", -1), _createElementVNode(\"option\", {\n    value: \"step\"\n  }, \"This Step Only\", -1)]), 512), [[_vModelSelect, $data.captureScope]])])]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.addCapture && $options.addCapture(...args)),\n    disabled: !$options.isValid,\n    class: \"add-button\"\n  }, \" Add Variable Capture \", 8, _hoisted_12)]), $options.hasCaptureConfig ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_cache[15] || (_cache[15] = _createElementVNode(\"h5\", null, \"Existing Captures:\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.request.variableCapture, (capture, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"capture-item\"\n    }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"strong\", null, _toDisplayString(capture.name), 1), _createTextVNode(\" - \" + _toDisplayString(capture.regex) + \" \", 1), _createElementVNode(\"span\", _hoisted_15, \"(\" + _toDisplayString(capture.source) + \")\", 1)]), _createElementVNode(\"button\", {\n      class: \"remove-button\",\n      onClick: $event => $options.removeCapture(index)\n    }, \"âœ•\", 8, _hoisted_16)]);\n  }), 128))])) : _createCommentVNode(\"\", true)]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}