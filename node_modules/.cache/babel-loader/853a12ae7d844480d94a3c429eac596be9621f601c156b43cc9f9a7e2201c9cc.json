{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'VariableCaptureForm',\n  props: {\n    request: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showEditDialog: false,\n      editIndex: null,\n      captureName: '',\n      captureRegex: '',\n      captureSource: 'responseBody',\n      captureRequired: true,\n      captureFailOnError: false,\n      captureScope: 'global'\n    };\n  },\n  computed: {\n    isValid() {\n      return this.captureName && this.captureRegex;\n    },\n    hasCaptureConfig() {\n      return this.request.variableCapture && this.request.variableCapture.length > 0;\n    }\n  },\n  methods: {\n    showAddCaptureDialog() {\n      this.editIndex = null;\n      this.captureName = '';\n      this.captureRegex = '';\n      this.captureSource = 'responseBody';\n      this.captureRequired = true;\n      this.captureFailOnError = false;\n      this.captureScope = 'global';\n      this.showEditDialog = true;\n    },\n    saveCapture() {\n      if (!this.captureName || !this.captureRegex) {\n        // Validation échouée\n        return;\n      }\n      const captureConfig = {\n        name: this.captureName,\n        regex: this.captureRegex,\n        source: this.captureSource,\n        required: this.captureRequired,\n        failOnError: this.captureFailOnError,\n        scope: this.captureScope\n      };\n      if (this.editIndex !== null) {\n        // Mode édition - mettre à jour la capture existante\n        this.$set(this.request.variableCapture, this.editIndex, captureConfig);\n      } else {\n        // Nouvelle capture - l'ajouter au tableau\n        if (!this.request.variableCapture) {\n          this.$set(this.request, 'variableCapture', []);\n        }\n        this.request.variableCapture.push(captureConfig);\n      }\n\n      // Réinitialiser et fermer le formulaire\n      this.resetForm();\n      this.showEditDialog = false;\n    },\n    editCapture(index) {\n      const capture = this.request.variableCapture[index];\n      this.captureName = capture.name;\n      this.captureRegex = capture.regex;\n      this.captureSource = capture.source || 'responseBody';\n      this.captureRequired = capture.required !== false; // par défaut true\n      this.captureFailOnError = capture.failOnError === true; // par défaut false\n      this.captureScope = capture.scope || 'global';\n      this.editIndex = index;\n      this.showEditDialog = true;\n    },\n    removeCapture(index) {\n      this.request.variableCapture.splice(index, 1);\n      if (this.request.variableCapture.length === 0) {\n        this.$delete(this.request, 'variableCapture');\n      }\n    },\n    resetForm() {\n      this.editIndex = null;\n      this.captureName = '';\n      this.captureRegex = '';\n      this.captureSource = 'responseBody';\n      this.captureRequired = true;\n      this.captureFailOnError = false;\n      this.captureScope = 'global';\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}