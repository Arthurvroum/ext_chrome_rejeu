{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"variables-tab\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex align-center\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex align-center w-100\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"text-grey\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_card, {\n    class: \"mb-4 variables-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"d-flex justify-space-between align-center variables-header\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_icon, {\n        icon: \"mdi-variable\",\n        class: \"mr-2\"\n      }), _cache[0] || (_cache[0] = _createTextVNode(\" Variables capturées \"))]), $options.totalCapturedVariables > 0 ? (_openBlock(), _createBlock(_component_v_chip, {\n        key: 0,\n        color: \"primary\",\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.totalCapturedVariables) + \" variables capturées \", 1)]),\n        _: 1\n      })) : _createCommentVNode(\"\", true)]),\n      _: 1\n    }), $options.totalCapturedVariables === 0 && !$options.hasCapturingSteps ? (_openBlock(), _createBlock(_component_v_card_text, {\n      key: 0,\n      class: \"text-center pa-6\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        icon: \"mdi-database-search\",\n        size: \"64\",\n        color: \"grey-lighten-1\",\n        class: \"mb-4\"\n      }), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n        class: \"text-h6 mb-2\"\n      }, \"Aucune variable capturée\", -1)), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n        class: \"text-body-2 text-grey mb-6\"\n      }, \"Aucune étape de ce scénario ne définit des captures de variables.\", -1))]),\n      _: 1\n    })) : $options.totalCapturedVariables === 0 && $options.hasCapturingSteps ? (_openBlock(), _createBlock(_component_v_card_text, {\n      key: 1,\n      class: \"text-center pa-6\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        icon: \"mdi-database-minus\",\n        size: \"64\",\n        color: \"amber-darken-2\",\n        class: \"mb-4\"\n      }), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n        class: \"text-h6 mb-2\"\n      }, \"Variables définies mais non capturées\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n        class: \"text-body-2 text-grey mb-6\"\n      }, \" Des captures de variables sont définies mais aucune n'a été trouvée dans les réponses. Lancez le replay pour capturer des variables. \", -1))]),\n      _: 1\n    })) : (_openBlock(), _createBlock(_component_v_expansion_panels, {\n      key: 2\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.stepsWithVariables, (step, index) => {\n        return _openBlock(), _createBlock(_component_v_expansion_panel, {\n          key: index\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_v_chip, {\n              size: \"small\",\n              color: $options.getMethodColor(step.method),\n              class: \"mr-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(step.method), 1)]),\n              _: 2\n            }, 1032, [\"color\"]), _createElementVNode(\"span\", null, _toDisplayString(step.name || `Step ${step.index + 1}`), 1), _createVNode(_component_v_chip, {\n              size: \"x-small\",\n              color: $options.getCapturedVariablesCount(step) > 0 ? 'success' : 'warning',\n              class: \"ml-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getCapturedVariablesCount(step)) + \" / \" + _toDisplayString($options.getDefinedVariablesCount(step)), 1)]),\n              _: 2\n            }, 1032, [\"color\"])])]),\n            _: 2\n          }, 1024), _createVNode(_component_v_expansion_panel_text, null, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n              class: \"subtitle-1 mb-3\"\n            }, \"Captures de variables\", -1)), _createVNode(_component_v_table, {\n              density: \"compact\"\n            }, {\n              default: _withCtx(() => [_cache[6] || (_cache[6] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nom\"), _createElementVNode(\"th\", null, \"Expression\"), _createElementVNode(\"th\", null, \"Source\"), _createElementVNode(\"th\", null, \"Valeur\"), _createElementVNode(\"th\", null, \"Statut\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(step.variableCaptures, (capture, captureIndex) => {\n                return _openBlock(), _createElementBlock(\"tr\", {\n                  key: captureIndex\n                }, [_createElementVNode(\"td\", null, _toDisplayString(capture.name), 1), _createElementVNode(\"td\", null, _toDisplayString(capture.regex), 1), _createElementVNode(\"td\", null, _toDisplayString($options.getSourceLabel(capture.source)), 1), _createElementVNode(\"td\", null, [$options.getCapturedValue(step, capture.name) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($options.getCapturedValue(step, capture.name)), 1)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Non capturée\"))]), _createElementVNode(\"td\", null, [_createVNode(_component_v_chip, {\n                  size: \"x-small\",\n                  color: $options.getCapturedValue(step, capture.name) ? 'success' : capture.required ? 'error' : 'amber-darken-2'\n                }, {\n                  default: _withCtx(() => [$options.getCapturedValue(step, capture.name) ? (_openBlock(), _createBlock(_component_v_icon, {\n                    key: 0,\n                    start: \"\",\n                    size: \"x-small\"\n                  }, {\n                    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" mdi-check \")])),\n                    _: 1\n                  })) : (_openBlock(), _createBlock(_component_v_icon, {\n                    key: 1,\n                    start: \"\",\n                    size: \"x-small\"\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(capture.required ? 'mdi-alert' : 'mdi-minus'), 1)]),\n                    _: 2\n                  }, 1024)), _createTextVNode(\" \" + _toDisplayString($options.getCapturedValue(step, capture.name) ? 'Capturée' : capture.required ? 'Manquante (requise)' : 'Non trouvée'), 1)]),\n                  _: 2\n                }, 1032, [\"color\"])])]);\n              }), 128))])]),\n              _: 2\n            }, 1024)])]),\n            _: 2\n          }, 1024)]),\n          _: 2\n        }, 1024);\n      }), 128))]),\n      _: 1\n    }))]),\n    _: 1\n  })]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}