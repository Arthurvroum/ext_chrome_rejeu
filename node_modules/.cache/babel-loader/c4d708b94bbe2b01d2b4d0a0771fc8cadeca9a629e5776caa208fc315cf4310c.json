{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"text-caption text-grey\"\n};\nimport { ref, computed, watch } from 'vue';\n\n// Props definition based on what's used in StepsList.vue\n\nexport default {\n  __name: 'StepVariableModals',\n  props: {\n    showCaptureDialog: {\n      type: Boolean,\n      default: false\n    },\n    showSubstitutionDialog: {\n      type: Boolean,\n      default: false\n    },\n    captureForm: {\n      type: Object,\n      default: () => ({\n        name: '',\n        source: 'body',\n        selector: '',\n        description: '',\n        required: false\n      })\n    },\n    substitutionForm: {\n      type: Object,\n      default: () => ({\n        target: 'body',\n        selector: '',\n        variable: '',\n        description: ''\n      })\n    },\n    captureSourceOptions: {\n      type: Array,\n      default: () => [{\n        label: 'Corps de la réponse',\n        value: 'body'\n      }, {\n        label: 'En-têtes de la réponse',\n        value: 'headers'\n      }, {\n        label: 'URL de la réponse',\n        value: 'url'\n      }]\n    },\n    availableSteps: {\n      type: Array,\n      default: () => []\n    },\n    availableVariables: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['update:showCaptureDialog', 'update:showSubstitutionDialog', 'saveCapture', 'saveSubstitution'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n\n    // Emits to correspond with the parent component\n    const emit = __emit;\n\n    // Local reactive state for the dialog visibility\n    const showCaptureDialogLocal = computed({\n      get: () => props.showCaptureDialog,\n      set: value => emit('update:showCaptureDialog', value)\n    });\n    const showSubstitutionDialogLocal = computed({\n      get: () => props.showSubstitutionDialog,\n      set: value => emit('update:showSubstitutionDialog', value)\n    });\n\n    // Form refs for validation\n    const captureFormRef = ref(null);\n    const substitutionFormRef = ref(null);\n\n    // Methods\n    function handleSaveCapture() {\n      // Form validation would go here if needed\n      emit('saveCapture', {\n        ...props.captureForm\n      });\n      showCaptureDialogLocal.value = false;\n    }\n    function handleSaveSubstitution() {\n      // Form validation would go here if needed\n      emit('saveSubstitution', {\n        ...props.substitutionForm\n      });\n      showSubstitutionDialogLocal.value = false;\n    }\n    function getStepName(stepIndex) {\n      if (!props.availableSteps || !props.availableSteps.length || stepIndex === undefined) {\n        return '';\n      }\n      const step = props.availableSteps.find(s => s.index === stepIndex);\n      return step ? step.name || `Step ${stepIndex + 1}` : '';\n    }\n    return (_ctx, _cache) => {\n      const _component_v_icon = _resolveComponent(\"v-icon\");\n      const _component_v_card_title = _resolveComponent(\"v-card-title\");\n      const _component_v_text_field = _resolveComponent(\"v-text-field\");\n      const _component_v_col = _resolveComponent(\"v-col\");\n      const _component_v_select = _resolveComponent(\"v-select\");\n      const _component_v_textarea = _resolveComponent(\"v-textarea\");\n      const _component_v_checkbox = _resolveComponent(\"v-checkbox\");\n      const _component_v_row = _resolveComponent(\"v-row\");\n      const _component_v_form = _resolveComponent(\"v-form\");\n      const _component_v_card_text = _resolveComponent(\"v-card-text\");\n      const _component_v_spacer = _resolveComponent(\"v-spacer\");\n      const _component_v_btn = _resolveComponent(\"v-btn\");\n      const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n      const _component_v_card = _resolveComponent(\"v-card\");\n      const _component_v_dialog = _resolveComponent(\"v-dialog\");\n      const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n      const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n      const _component_v_list_item = _resolveComponent(\"v-list-item\");\n      return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_dialog, {\n        modelValue: showCaptureDialogLocal.value,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => showCaptureDialogLocal.value = $event),\n        \"max-width\": \"700px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"headline\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_icon, {\n              icon: \"mdi-variable-plus\",\n              class: \"mr-2\"\n            }), _cache[13] || (_cache[13] = _createTextVNode(\" Ajouter une capture de variable \"))]),\n            _: 1\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_form, {\n              ref: \"captureForm\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"6\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: __props.captureForm.name,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => __props.captureForm.name = $event),\n                    label: \"Nom de la variable\",\n                    placeholder: \"Ex: authToken\",\n                    rules: [v => !!v || 'Le nom est requis', v => /^[a-zA-Z0-9_]+$/.test(v) || 'Lettres, chiffres et _ uniquement'],\n                    required: \"\"\n                  }, null, 8, [\"modelValue\", \"rules\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"6\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: __props.captureForm.source,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => __props.captureForm.source = $event),\n                    items: __props.captureSourceOptions,\n                    label: \"Source de la capture\",\n                    \"item-title\": \"label\",\n                    \"item-value\": \"value\",\n                    required: \"\"\n                  }, null, 8, [\"modelValue\", \"items\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: __props.captureForm.selector,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => __props.captureForm.selector = $event),\n                    label: \"Expression de capture\",\n                    placeholder: \"Expression régulière ou JSONPath\",\n                    hint: \"Expression régulière avec groupe de capture ou JSONPath\",\n                    \"persistent-hint\": \"\",\n                    required: \"\"\n                  }, null, 8, [\"modelValue\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: __props.captureForm.description,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => __props.captureForm.description = $event),\n                    label: \"Description\",\n                    placeholder: \"Description de cette variable\",\n                    rows: \"2\",\n                    \"auto-grow\": \"\"\n                  }, null, 8, [\"modelValue\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_checkbox, {\n                    modelValue: __props.captureForm.required,\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => __props.captureForm.required = $event),\n                    label: \"Variable requise\"\n                  }, null, 8, [\"modelValue\"]), __props.captureForm.required ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" L'exécution échouera si cette variable n'est pas capturée \")) : _createCommentVNode(\"\", true)]),\n                  _: 1\n                })]),\n                _: 1\n              })]),\n              _: 1\n            }, 512)]),\n            _: 1\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: \"grey\",\n              variant: \"text\",\n              onClick: _cache[5] || (_cache[5] = $event => showCaptureDialogLocal.value = false)\n            }, {\n              default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\" Annuler \")])),\n              _: 1\n            }), _createVNode(_component_v_btn, {\n              color: \"primary\",\n              onClick: handleSaveCapture\n            }, {\n              default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\" Sauvegarder \")])),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"]), _createVNode(_component_v_dialog, {\n        modelValue: showSubstitutionDialogLocal.value,\n        \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => showSubstitutionDialogLocal.value = $event),\n        \"max-width\": \"700px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"headline\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_icon, {\n              icon: \"mdi-find-replace\",\n              class: \"mr-2\"\n            }), _cache[16] || (_cache[16] = _createTextVNode(\" Ajouter une substitution de variable \"))]),\n            _: 1\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_form, {\n              ref: \"substitutionForm\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"6\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: __props.substitutionForm.target,\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => __props.substitutionForm.target = $event),\n                    items: [{\n                      label: 'Corps de la requête',\n                      value: 'body'\n                    }, {\n                      label: 'URL',\n                      value: 'url'\n                    }, {\n                      label: 'En-têtes',\n                      value: 'headers'\n                    }],\n                    label: \"Cible de la substitution\",\n                    \"item-title\": \"label\",\n                    \"item-value\": \"value\",\n                    required: \"\"\n                  }, null, 8, [\"modelValue\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  sm: \"6\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: __props.substitutionForm.variable,\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => __props.substitutionForm.variable = $event),\n                    items: __props.availableVariables,\n                    label: \"Variable à utiliser\",\n                    \"item-title\": \"name\",\n                    \"item-value\": \"name\",\n                    required: \"\"\n                  }, {\n                    item: _withCtx(({\n                      item,\n                      props\n                    }) => [_createVNode(_component_v_list_item, _normalizeProps(_guardReactiveProps(props)), {\n                      prepend: _withCtx(() => [_createVNode(_component_v_icon, {\n                        icon: item.raw.isGlobal ? 'mdi-earth' : 'mdi-variable',\n                        color: item.raw.isGlobal ? 'info' : 'primary',\n                        size: \"small\",\n                        class: \"mr-2\"\n                      }, null, 8, [\"icon\", \"color\"])]),\n                      default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.raw.name), 1)]),\n                        _: 2\n                      }, 1024), !item.raw.isGlobal ? (_openBlock(), _createBlock(_component_v_list_item_subtitle, {\n                        key: 0\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(_toDisplayString(getStepName(item.raw.stepIndex)), 1)]),\n                        _: 2\n                      }, 1024)) : _createCommentVNode(\"\", true)]),\n                      _: 2\n                    }, 1040)]),\n                    _: 1\n                  }, 8, [\"modelValue\", \"items\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: __props.substitutionForm.selector,\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => __props.substitutionForm.selector = $event),\n                    label: \"Expression de remplacement\",\n                    placeholder: \"Texte à remplacer ou expression JSONPath\",\n                    hint: \"Texte à remplacer ou chemin JSONPath pour l'insertion\",\n                    \"persistent-hint\": \"\",\n                    required: \"\"\n                  }, null, 8, [\"modelValue\"])]),\n                  _: 1\n                }), _createVNode(_component_v_col, {\n                  cols: \"12\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: __props.substitutionForm.description,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => __props.substitutionForm.description = $event),\n                    label: \"Description\",\n                    placeholder: \"Description de cette substitution\",\n                    rows: \"2\",\n                    \"auto-grow\": \"\"\n                  }, null, 8, [\"modelValue\"])]),\n                  _: 1\n                })]),\n                _: 1\n              })]),\n              _: 1\n            }, 512)]),\n            _: 1\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: \"grey\",\n              variant: \"text\",\n              onClick: _cache[11] || (_cache[11] = $event => showSubstitutionDialogLocal.value = false)\n            }, {\n              default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" Annuler \")])),\n              _: 1\n            }), _createVNode(_component_v_btn, {\n              color: \"primary\",\n              onClick: handleSaveSubstitution\n            }, {\n              default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\" Sauvegarder \")])),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"modelValue\"])]);\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}