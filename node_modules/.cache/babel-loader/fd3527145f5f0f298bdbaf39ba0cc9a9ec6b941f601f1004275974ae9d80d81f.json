{"ast":null,"code":"export default {\n  name: 'VariableCaptureForm',\n  props: {\n    request: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showDialog: false,\n      editIndex: null,\n      captureName: '',\n      captureRegex: '',\n      captureSource: 'responseBody',\n      captureRequired: true,\n      captureFailOnError: false,\n      captureScope: 'global'\n    };\n  },\n  computed: {\n    isValid() {\n      return this.captureName && this.captureRegex;\n    },\n    hasCaptureConfig() {\n      return this.request.variableCapture && this.request.variableCapture.length > 0;\n    }\n  },\n  methods: {\n    saveCapture() {\n      if (!this.captureName || !this.captureRegex) {\n        // Validation échouée\n        return;\n      }\n      const captureConfig = {\n        name: this.captureName,\n        regex: this.captureRegex,\n        source: this.captureSource,\n        required: this.captureRequired,\n        failOnError: this.captureFailOnError,\n        scope: this.captureScope\n      };\n      if (this.editIndex !== null) {\n        // Mode édition\n        const updatedCaptures = [...(this.request.variableCapture || [])];\n        updatedCaptures[this.editIndex] = captureConfig;\n\n        // Mettre à jour la requête\n        this.request.variableCapture = updatedCaptures;\n        this.$emit('update-request', this.request);\n      } else {\n        // Mode ajout\n        this.$emit('add-capture', captureConfig);\n      }\n\n      // Fermer le modal et réinitialiser les champs\n      this.closeDialog();\n    },\n    closeDialog() {\n      this.showDialog = false;\n      this.editIndex = null;\n      this.resetForm();\n    },\n    resetForm() {\n      this.captureName = '';\n      this.captureRegex = '';\n      this.captureSource = 'responseBody';\n      this.captureRequired = true;\n      this.captureFailOnError = false;\n      this.captureScope = 'global';\n    },\n    editCapture(index) {\n      if (!this.request.variableCapture) return;\n\n      // Remplir le formulaire avec les données de la capture sélectionnée\n      const capture = this.request.variableCapture[index];\n      this.captureName = capture.name;\n      this.captureRegex = capture.regex;\n      this.captureSource = capture.source;\n      this.captureRequired = capture.required;\n      this.captureFailOnError = capture.failOnError;\n      this.captureScope = capture.scope;\n\n      // Définir l'index d'édition et ouvrir le dialogue\n      this.editIndex = index;\n      this.showDialog = true;\n    },\n    removeCapture(index) {\n      if (!this.request.variableCapture) return;\n\n      // Créer une copie du tableau\n      const updatedCaptures = [...this.request.variableCapture];\n      updatedCaptures.splice(index, 1);\n\n      // Mettre à jour la requête\n      this.request.variableCapture = updatedCaptures;\n      this.$emit('update-request', this.request);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}