{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VLayout.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { createLayout, makeLayoutProps } from \"../../composables/layout.js\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\";\nexport const makeVLayoutProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeLayoutProps()\n}, 'VLayout');\nexport const VLayout = genericComponent()({\n  name: 'VLayout',\n  props: makeVLayoutProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      layoutClasses,\n      layoutStyles,\n      getLayoutItem,\n      items,\n      layoutRef\n    } = createLayout(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    useRender(() => _createVNode(\"div\", {\n      \"ref\": layoutRef,\n      \"class\": [layoutClasses.value, props.class],\n      \"style\": [dimensionStyles.value, layoutStyles.value, props.style]\n    }, [slots.default?.()]));\n    return {\n      getLayoutItem,\n      items\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}