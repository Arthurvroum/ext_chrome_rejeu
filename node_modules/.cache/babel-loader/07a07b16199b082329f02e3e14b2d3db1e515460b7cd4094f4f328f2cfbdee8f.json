{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VBreadcrumbs.css\";\n\n// Components\nimport { VBreadcrumbsDivider } from \"./VBreadcrumbsDivider.js\";\nimport { VBreadcrumbsItem } from \"./VBreadcrumbsItem.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.js\";\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { makeTagProps } from \"../../composables/tag.js\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/'\n  },\n  icon: IconValue,\n  items: {\n    type: Array,\n    default: () => []\n  },\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'ul'\n  })\n}, 'VBreadcrumbs');\nexport const VBreadcrumbs = genericComponent()({\n  name: 'VBreadcrumbs',\n  props: makeVBreadcrumbsProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider')\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled')\n      }\n    });\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? {\n        item: {\n          title: item\n        },\n        raw: item\n      } : {\n        item,\n        raw: item\n      };\n    }));\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon);\n      return _createVNode(props.tag, {\n        \"class\": ['v-breadcrumbs', backgroundColorClasses.value, densityClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        default: () => [hasPrepend && _createVNode(\"li\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-breadcrumbs__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"start\": true,\n          \"icon\": props.icon\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !props.icon,\n          \"defaults\": {\n            VIcon: {\n              icon: props.icon,\n              start: true\n            }\n          }\n        }, slots.prepend)]), items.value.map((_ref2, index, array) => {\n          let {\n            item,\n            raw\n          } = _ref2;\n          return _createVNode(_Fragment, null, [slots.item?.({\n            item,\n            index\n          }) ?? _createVNode(VBreadcrumbsItem, _mergeProps({\n            \"key\": index,\n            \"disabled\": index >= array.length - 1\n          }, typeof item === 'string' ? {\n            title: item\n          } : item), {\n            default: slots.title ? () => slots.title?.({\n              item,\n              index\n            }) : undefined\n          }), index < array.length - 1 && _createVNode(VBreadcrumbsDivider, null, {\n            default: slots.divider ? () => slots.divider?.({\n              item: raw,\n              index\n            }) : undefined\n          })]);\n        }), slots.default?.()]\n      });\n    });\n    return {};\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}