{"ast":null,"code":"export default {\n  name: 'VariableCaptureForm',\n  props: {\n    request: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      captureName: '',\n      captureRegex: '',\n      captureSource: 'responseBody',\n      captureRequired: true,\n      captureFailOnError: false,\n      captureScope: 'global'\n    };\n  },\n  computed: {\n    isValid() {\n      return this.captureName && this.captureRegex;\n    },\n    hasCaptureConfig() {\n      return this.request.variableCapture && this.request.variableCapture.length > 0;\n    }\n  },\n  methods: {\n    addCapture() {\n      if (!this.isValid) return;\n      const captureConfig = {\n        name: this.captureName,\n        regex: this.captureRegex,\n        source: this.captureSource,\n        required: this.captureRequired,\n        failOnError: this.captureFailOnError,\n        scope: this.captureScope\n      };\n      this.$emit('add-capture', captureConfig);\n\n      // Reset form\n      this.captureName = '';\n      this.captureRegex = '';\n    },\n    removeCapture(index) {\n      if (!this.request.variableCapture) return;\n\n      // Create a copy of the array\n      const updatedCaptures = [...this.request.variableCapture];\n      updatedCaptures.splice(index, 1);\n\n      // Update the request\n      this.request.variableCapture = updatedCaptures;\n      this.$emit('update-request', this.request);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}