{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VSpeedDial.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { makeVMenuProps, VMenu } from \"../VMenu/VMenu.js\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { MaybeTransition } from \"../../composables/transition.js\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport const makeVSpeedDialProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeVMenuProps({\n    offset: 8,\n    minWidth: 0,\n    openDelay: 0,\n    closeDelay: 100,\n    location: 'top center',\n    transition: 'scale-transition'\n  })\n}, 'VSpeedDial');\nexport const VSpeedDial = genericComponent()({\n  name: 'VSpeedDial',\n  props: makeVSpeedDialProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const menuRef = ref();\n    const location = computed(() => {\n      const [y, x = 'center'] = props.location?.split(' ') ?? [];\n      return `${y} ${x}`;\n    });\n    const locationClasses = computed(() => ({\n      [`v-speed-dial__content--${location.value.replace(' ', '-')}`]: true\n    }));\n    useRender(() => {\n      const menuProps = VMenu.filterProps(props);\n      return _createVNode(VMenu, _mergeProps(menuProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": props.class,\n        \"style\": props.style,\n        \"contentClass\": ['v-speed-dial__content', locationClasses.value, props.contentClass],\n        \"location\": location.value,\n        \"ref\": menuRef,\n        \"transition\": \"fade-transition\"\n      }), {\n        ...slots,\n        default: slotProps => _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              size: 'small'\n            }\n          }\n        }, {\n          default: () => [_createVNode(MaybeTransition, {\n            \"appear\": true,\n            \"group\": true,\n            \"transition\": props.transition\n          }, {\n            default: () => [slots.default?.(slotProps)]\n          })]\n        })\n      });\n    });\n    return {};\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}