{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"simple-interface\"\n};\nconst _hoisted_3 = {\n  class: \"tab-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ReplayTab = _resolveComponent(\"ReplayTab\");\n  const _component_RecordTab = _resolveComponent(\"RecordTab\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isReplayTab ? (_openBlock(), _createBlock(_component_ReplayTab, {\n    key: 0,\n    class: \"fullscreen-component\"\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_cache[0] || (_cache[0] = _createElementVNode(\"header\", null, [_createElementVNode(\"h1\", null, \"Network Request Recorder\")], -1)), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_RecordTab, {\n    onOpenReplay: $options.openReplayTab\n  }, null, 8, [\"onOpenReplay\"])])])])], 64))]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}