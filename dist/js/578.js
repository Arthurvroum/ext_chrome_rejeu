"use strict";(self["webpackChunkextension_vue"]=self["webpackChunkextension_vue"]||[]).push([[578],{3197:function(e,t,r){r.r(t);r(4114),r(8111),r(2489),r(7588),r(1701),r(4603),r(7566),r(8721),r(7126);const o={extractStepsFromOpenAPI(e){const t=[];if(e.rawRequests&&Array.isArray(e.rawRequests))return console.log("Utilisation des requêtes brutes préservées dans le fichier exporté:",e.rawRequests.length),this.convertRecordedDataToScenario(e.rawRequests);if(!e.openapi||!e.paths)return console.error("Invalid OpenAPI format"),t;const r=e["x-ark-replayr"]&&("recording"===e["x-ark-replayr"].type||"raw-recording"===e["x-ark-replayr"].type);console.log("Loading OpenAPI spec:",{isArkRecording:r,metadata:e["x-ark-replayr"]||"Not an Ark Replayr recording"});const o=e.servers&&e.servers.length>0?e.servers.map((e=>e.url)):[""];console.log("Extracting steps from OpenAPI spec with servers:",o);const s=[];for(const[a,l]of Object.entries(e.paths))for(const[e,t]of Object.entries(l))"parameters"!==e&&"summary"!==e&&"description"!==e&&s.push({path:a,method:e,operation:t,index:void 0!==t["x-recorded-index"]?t["x-recorded-index"]:9999});r&&s.sort(((e,t)=>e.index-t.index));for(const{path:a,method:l,operation:i}of s){const r=i["x-original-url"]||e["x-original-urls"]&&e["x-original-urls"][`${l.toLowerCase()}-${a}`];if(r){const e=n(l,a,i,r);t.push(e)}else{const e=o[0]||"";let r=e+a;const s=i.parameters?.filter((e=>"query"===e.in)).map((e=>`${e.name}=${encodeURIComponent(e.example||"")}`))||[];s.length>0&&(r+="?"+s.join("&")),console.log(`Reconstructed URL for ${l} ${a}:`,r);const c=n(l,a,i,r);t.push(c)}}return console.log("Extracted",t.length,"steps with full URLs"),t;function n(t,r,o,s){const n={},a={};o.parameters&&o.parameters.forEach((e=>{"header"===e.in?n[e.name]=e.example||"":"query"===e.in&&(a[e.name]=e.example||"")}));let l=null;const i=e=>null===e||void 0===e?null:e.content&&e.content["application/json"]&&e.content["application/json"].example?(console.log("Found body in content.application/json.example"),e.content["application/json"].example):e.content&&e.content["application/json"]&&e.content["application/json"].schema&&e.content["application/json"].schema.example?(console.log("Found body in content.application/json.schema.example"),e.content["application/json"].schema.example):e;void 0!==o["x-raw-body"]?l=o["x-raw-body"]:o.requestBody?l=i(o.requestBody):o.body&&(l=o.body),console.log(`Request body for ${t} ${r}:`,l?typeof l:"none");const c=void 0!==o["x-recorded-metadata"]||"recording"===e["x-ark-replayr"]?.type||"raw-recording"===e["x-ark-replayr"]?.type;return{name:o.summary||o.operationId||`${t.toUpperCase()} ${r}`,description:o.description||`Recorded ${t.toUpperCase()} request to ${s}`,url:s,method:t.toUpperCase(),enabled:!0,skip:!1,parameters:o.parameters||[],queryParameters:a,requestHeaders:n,requestBody:l,_originalRequestBody:o.requestBody,responseHeaders:o["x-response-headers"]||{},statusCode:o["x-recorded-metadata"]?.statusCode,responses:o.responses||{},variableSubstitutions:o["x-variable-substitution"]||[],variableCaptures:o["x-variable-capture"]||[],originalPath:r,importedFromOpenAPI:!0,fromRecording:c,metadata:o["x-recorded-metadata"]||null}}},async convertRecordedDataToScenario(e){if(!e||!Array.isArray(e))return console.error("Invalid recorded data format:",e),[];try{console.log("Converting recorded data to scenario, entries:",e.length);const t=e.filter((e=>e&&e.method&&["GET","POST","PUT","DELETE","PATCH"].includes(e.method)));return console.log("Filtered requests:",t.length),t.map(((e,t)=>{const r=e=>{if(null===e||void 0===e)return null;if("object"===typeof e&&e.content&&e.content["application/json"]){if(e.content["application/json"].example)return console.log("Extracted body from content.application/json.example structure"),e.content["application/json"].example;if(e.content["application/json"].schema&&e.content["application/json"].schema.example)return console.log("Extracted body from content.application/json.schema.example structure"),e.content["application/json"].schema.example}return"object"===typeof e&&e.content?(console.log("Found potential Odoo content wrapper, attempting to extract"),e.content):e};let o=r(e.body);const s=new URL(e.url,window.location.origin),n={};return s.searchParams.forEach(((e,t)=>{n[t]=e})),{id:`step-${t+1}`,name:`Étape ${t+1}: ${e.method} ${s.pathname}`,url:e.url,method:e.method,headers:e.headers||{},body:o||null,queryParams:Object.keys(n).length>0?n:null,variables:[],enabled:!0,delay:0,originalRequest:e,_originalBody:e.body}}))}catch(t){return console.error("Error converting recorded data to scenario:",t),[]}},async startReplay(e,t){console.log("Starting replay with steps:",e.length,"and options:",t);const r=e.map((e=>{const r={...e,skip:!e.enabled,url:this.applyBaseUrlIfNeeded(e.url,t.baseUrl),requestHeaders:e.requestHeaders||{},requestBody:e.requestBody||null,variableSubstitutions:e.variableSubstitutions||[],variableCaptures:e.variableCaptures||[]};return t.globalVariables&&t.globalVariables.length>0&&(console.log(`Ajout de ${t.globalVariables.length} variables globales aux captures de l'étape`),r.variableCaptures||(r.variableCaptures=[]),t.globalVariables.forEach((e=>{r.variableCaptures.push({...e,isGlobal:!0})}))),console.log(`Prepared step: ${e.method} ${r.url}`),r}));if(t.stepInterval>0)return this.startStepByStepReplay(r,t);const o={options:t,steps:r};try{await this.checkBackgroundScriptStatus()}catch(s){throw console.error("Background script not active:",s),new Error(`L'extension semble ne pas être prête: ${s.message}. Rafraîchissez la page et réessayez.`)}return this.sendMessageWithRetry({action:"replayRequests",scenario:o},3,1e3)},async startStepByStepReplay(e,t){console.log("Starting step-by-step replay with interval:",t.stepInterval,"ms");try{await this.checkBackgroundScriptStatus()}catch(s){throw console.error("Background script not active:",s),new Error(`L'extension semble ne pas être prête: ${s.message}. Rafraîchissez la page et réessayez.`)}const r=[];const o={};return new Promise(((n,a)=>{const l=async a=>{if(a>=e.length)return console.log("Step-by-step replay completed with",r.length,"results"),Object.keys(o).length>0&&(console.log("Variables globales capturées:",o),r.globalVariables=o),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("step-execution-progress",{detail:{currentStepIndex:-1,results:[...r],status:"completed"}})),void n(r);const i=e[a];console.log(`Executing step ${a+1}/${e.length}: ${i.method} ${i.url}`),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("step-execution-progress",{detail:{currentStepIndex:a,results:[...r],status:"in-progress"}}));try{const e={options:{...t,showRuntimeProgress:!1},steps:[i]},o=await this.sendMessageWithRetry({action:"replayRequests",scenario:e},3,1e3);if(o&&o.length>0&&r.push(o[0]),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("step-execution-progress",{detail:{currentStepIndex:a,results:[...r],status:o[0]?.status||"completed"}})),t.stopOnError&&o&&o[0]&&"error"===o[0].status)return console.log("Stopping execution due to error in step",a+1),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("step-execution-progress",{detail:{currentStepIndex:-1,results:[...r],status:"stopped"}})),void n(r);console.log(`Waiting ${t.stepInterval}ms before next step...`),setTimeout((()=>{l(a+1)}),t.stepInterval)}catch(s){if(console.error(`Error executing step ${a+1}:`,s),r.push({url:i.url,method:i.method,status:"error",error:s.message,timestamp:(new Date).toISOString()}),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("step-execution-progress",{detail:{currentStepIndex:a,results:[...r],status:"error"}})),t.stopOnError)return void n(r);console.log(`Waiting ${t.stepInterval}ms before next step...`),setTimeout((()=>{l(a+1)}),t.stepInterval)}};l(0)}))},sendMessageWithRetry(e,t=3,r=1e3){return new Promise(((o,s)=>{let n=0;const a=()=>{n++,console.log(`Sending message attempt ${n}/${t+1}:`,e.action),chrome.runtime.sendMessage(e,(e=>{chrome.runtime.lastError?(console.warn(`Error in attempt ${n}:`,chrome.runtime.lastError),n<=t?(console.log(`Retrying in ${r}ms...`),setTimeout(a,r)):s(new Error(`Could not communicate with background script after ${t+1} attempts: ${chrome.runtime.lastError.message}`))):e&&"Replay completed"===e.status?(console.log("Replay completed successfully:",e.results?.length||0,"results"),o(e.results)):e&&e.error?(console.error("Error during replay:",e.error),s(new Error(e.error))):e?(console.log("Unexpected response format:",e),o(e)):s(new Error("No response received from background script"))}))};a()}))},checkBackgroundScriptStatus(){return new Promise(((e,t)=>{chrome.runtime.sendMessage({action:"checkExtensionStatus"},(r=>{chrome.runtime.lastError?t(new Error(`Background script not responding: ${chrome.runtime.lastError.message}`)):r&&r.status?(console.log("Background script status:",r.status),e(r)):t(new Error("Background script responded but no status received"))}))}))},clearResults(){return new Promise(((e,t)=>{chrome.storage.local.remove(["replayProgress","replayProgressTimestamp"],(()=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e()}))}))},clearAllReplayData(){return new Promise(((e,t)=>{chrome.storage.local.remove(["latestRecordedData","replayWindowData","replayWindowDataCount","autoLoadLatestRecording","replayProgress","dataTimestamp"],(()=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e()}))}))},exportReplayResults(e,t){const r={timestamp:(new Date).toISOString(),scenario:e?.title||"Recorded Requests Replay",description:e?.description||"Replay of recorded network requests",results:t,summary:{totalSteps:t.length,successCount:t.filter((e=>"success"===e.status)).length,errorCount:t.filter((e=>"error"===e.status)).length,skippedCount:t.filter((e=>"skipped"===e.status)).length}},o=new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),s=URL.createObjectURL(o),n=document.createElement("a");n.href=s,n.download=`replay-results-${(new Date).toISOString().slice(0,19).replace(/:/g,"-")}.json`,n.onclick=()=>{setTimeout((()=>{URL.revokeObjectURL(s)}),150)},n.click()},loadReplayData(){return new Promise(((e,t)=>{chrome.storage.local.get(["latestRecordedData","autoLoadLatestRecording","replayWindowData","replayWindowDataCount"],(r=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(r)}))}))},applyBaseUrlIfNeeded(e,t){if(!t||!e)return e;try{const o=new URL(e);let s;try{s=t.startsWith("http://")||t.startsWith("https://")?new URL(t):new URL("http://"+t)}catch(r){return console.warn("Invalid baseUrl format:",t,r),e}const n=new URL(o.pathname+o.search+o.hash,s.origin);return console.log(`Applied baseUrl: ${e} → ${n.href}`),n.href}catch(r){return console.warn("Error applying baseUrl:",r),e}},extractCommonBaseUrl(e){if(!e||0===e.length)return console.warn("Aucune étape fournie pour l'extraction de la base URL"),"";try{console.log("Extraction de la base URL commune à partir de",e.length,"étapes");const t=e.filter((e=>e&&e.url&&"string"===typeof e.url));if(0===t.length)return console.warn("Aucune étape avec URL valide trouvée"),"";console.log("Nombre d'étapes avec URLs valides:",t.length);const r=t.map((e=>{try{let t=e.url;t.match(/^https?:\/\//i)||(t="http://"+t);const r=new URL(t);return r.origin}catch(t){return console.warn("Erreur lors de l'analyse de l'URL:",e.url,t),null}})).filter((e=>null!==e));if(console.log("Origines extraites:",r),0===r.length)return console.warn("Aucune origine valide extraite des URLs"),"";const o={};let s=0,n="";r.forEach((e=>{o[e]=(o[e]||0)+1,o[e]>s&&(s=o[e],n=e)}));const a=s/r.length*100;return a<50&&console.warn(`L'origine la plus fréquente (${n}) n'est présente que dans ${a.toFixed(1)}% des URLs.`),console.log(`Base URL commune extraite: ${n} (présente dans ${s}/${r.length} URLs, ${a.toFixed(1)}%)`),n}catch(t){return console.error("Erreur lors de l'extraction de la base URL commune:",t),""}}};t["default"]=o}}]);